
# $Id$

@SET_MAKE@

# Set makefile variables, some with values supplid by configure 
# DEFS gets the `-D' defines that describe what a particular system has
# or doesn't have.

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)/cgi-bin
libdir = $(exec_prefix)/lib
includedir = $(prefix)/include
etcdir = $(prefix)/etc
TAR = @TAR@
AR = ar
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

CDFSRCS:=CDFArray.cc CDFFloat32.cc CDFFloat64.cc CDFInt32.cc CDFUInt32.cc \
	CDFByte.cc CDFStr.cc CDFUnused.cc \
	CDFreadAttributes.cc CDFreadDescriptors.cc \
	CDFutilities.cc CDFRequestHandler.cc
CDFOBJS:=CDFArray.o CDFFloat32.o CDFFloat64.o CDFInt32.o CDFUInt32.o \
	CDFByte.o CDFStr.o CDFUnused.o \
	CDFreadAttributes.o CDFreadDescriptors.o \
	CDFutilities.o CDFRequestHandler.o

HANDLER_SRCS:=cdf_handler.cc CDFHandlerApp.cc
HANDLER_OBJS:=cdf_handler.o CDFHandlerApp.o
HANDLER:=cdf_handler

MODOBJS:=cdf_module.o

LIB:=libcdf-handler.a
INCS:=-I. @INCS@
DEFS:=@DEFS@
CXXFLAGS:=@CXXFLAGS@ -Wall -Wno-deprecated
CPPFLAGS:=$(CXXFLAGS) $(DEFS) $(INCS)

LIBS:=-L. -lcdf-handler @LIBS@
MODS:=@MODS@

SHELL = /bin/sh
version = @VERSION@
basedir = cdf-handler
dir = $(basedir)-$(version)
host = @host@

COMPONENT_NAME = DODS CDF Server

# names of key programs

LN_S = @LN_S@
CC = @CC@
CXX = @CXX@
TAGS = etags
VPATH = .

# Matlab client can be suppressed by a switch to configure.
all: $(LIB) handler

lib: $(LIB)

handler: $(HANDLER)

$(LIB): $(LIBOBJS) $(CDFOBJS) 
	$(AR) -cru $@ $(LIBOBJS) $(CDFOBJS) 
	$(RANLIB) $@

$(HANDLER) : $(HANDLER_OBJS) $(LIB) $(MODOBJS) $(MODS)
	$(CXX) -o $(HANDLER) $(HANDLER_OBJS) $(MODS) $(MODOBJS) $(LIB) $(LIBS)

# Standard targets with some customization for das-test and dds-test

configure: configure.in $(DODS_ROOT)/etc/aclocal.m4
	autoconf --include=$(DODS_ROOT)/etc

Makefile: Makefile.in
	if [ -x ./config.status ]; \
	then \
	    ${SHELL} ./config.status; \
	else \
	    ./configure; \
	fi

check:
	echo "No tests at this time"

install: $(LIB) $(HANDLER) install-mods install-progs
	-mkdir -p $(libdir)
	$(INSTALL_DATA) $(LIB) $(libdir)
	$(RANLIB) $(libdir)/$(LIB)

install-mods:
	-mkdir -p $(libdir)
	for h in $(MODOBJS); \
	    do $(INSTALL_DATA) $$h $(libdir); done

install-progs: $(HANDLER)
	-mkdir -p $(bindir)
	$(INSTALL_PROGRAM) -s $(HANDLER) $(bindir)

clean:	
	-rm -f *.sum *.log *~ core
	-rm -f $(HANDLER) $(LIB) $(HANDLER_OBJS) $(CDFOBJS)

distclean: clean
	-rm -f config.status config.log config.cache
	-rm -f site.exp config_cdf.h

.PHONY: depend
depend: 
	@depend@ -m Makefile.in -- $(CPPFLAGS) -- $(HANDLER_SRCS) $(CDFSRCS)
	$(MAKE) $(MFLAGS) Makefile

.PHONY: tar
tar:
	-rm -f config.cache config.log config.status
	cd $(DODS_ROOT)/.. && \
	$(TAR) --exclude 'old' --exclude '.#*' --exclude 'CVS' \
	    --exclude '.snprj*' --exclude '.flc*' --exclude 'Makefile' \
	    --gzip --create --dereference --file DODS-$(dir).tar.gz \
	    DODS/src/$(dir)

# Creates tar files for binary distributions.
#
.PHONY: binary-tar
binary-tar:
	cd $(DODS_ROOT).. && ( \
	$(TAR) --gzip --create --dereference \
            --file DODS-cdf-library-$(version)-$(host).tar.gz \
            DODS/NEWS \
            DODS/docs/README DODS/docs/README-cdf-library \
            DODS/lib/libcdf-handler.a ; \
        $(TAR) --gzip --create --dereference \
            --file DODS-cdf-server-$(version)-$(host).tar.gz \
            DODS/NEWS \
            DODS/docs/README DODS/docs/README-cdf-server \
            DODS/etc/cdf_handler ; \
        $(TAR) --gzip --create --dereference \
            --file DODS-cdf-client-$(version)-$(host).tar.gz \
            DODS/NEWS \
            DODS/docs/README DODS/docs/README-cdf-client )

.PHONY: update-version
update-version: check-version
	@echo "Version is: `cat version.h`"
	if test ! -d ../$(dir); then mv ../$(basedir)* ../$(dir); fi
	if test ! -f $(DODS_ROOT)VERSION; then touch $(DODS_ROOT)VERSION; fi
	$(etcdir)/update-manifest.pl "$(COMPONENT_NAME)" $(version) \
		< $(DODS_ROOT)VERSION > tmp.dods.manifest
	mv tmp.dods.manifest $(DODS_ROOT)VERSION

# Compare the version encoded in this Makefile (set by configure) with the
# version in version.h. The version make variable is set up near the top of
# the Makefile.
.PHONY: check-version
check-version:
	@echo "Checking for version.h and Makefile version match-up"
	@if [ "$(version)" != "`cat version.h`" ]; \
	then \
		echo "You must manually re-run configure!"; \
		exit 1; \
	else \
		echo "Yes, they match."; \
	fi

.PHONY: tags
tags:
	$(TAGS) $(TAGS_FLAGS) *.cc *.h

.SUFFIXES:      .o .cc

.cc.o:
	$(CXX) -c $(CPPFLAGS) -o $@ $<

# DO NOT DELETE; depend depends on this line.
