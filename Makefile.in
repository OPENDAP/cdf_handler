
# $Id: Makefile.in,v 1.1 1996/06/10 20:34:03 jimg Exp $

@SET_MAKE@

# Set makefile variables, some with values supplid by configure 
# DEFS gets the `-D' defines that describe what a particular system has
# or doesn't have.

PROG = cdf_das cdf_dds cdf_dods
DODS_ROOT = ../../..

INCS = -I$(DODS_ROOT)/include -I./lcdf/include
DEFS = -DUSE_LIBGXX_INLINES -DLOCAL @SWAP@ @NETLONG@ @DEFS@
CPPFLAGS = @CPPFLAGS@ $(DEFS) $(INCS)
CFLAGS = @CFLAGS@ $(SWAP) $(NETLONG)
CXXFLAGS = @CXXFLAGS@

# Make sure that the core software libraries just built can be found without
# first running make install, but that if `make install' and `make clean' has
# been run those libraries will be found in the `lib' directory.
LDFLAGS = @LDFLAGS@ -L. -L./lcdf/lib -L$(DODS_ROOT)/lib

LFLAGS=-8
YFLAGS=-d

LIBS = -lcdf-dods -ldap++ -lcdf-dods -ldap++ -lnetio -lerrmsg @LIBS@

# Set the instalation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
includedir = $(prefix)/include
manext = 1
mandir = $(prefix)/man/man$(manext)

src = $(DODS_ROOT)/src
etcdir = $(DODS_ROOT)/etc

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
VPATH = @srcdir@:lnetcdf
dir = @dir@

# testsuite specifics
RUNTEST= runtest
RUNTESTFLAGS= #--all --verbose

# names of key programs

LN_S = @LN_S@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
YACC = @YACC@
LEX = @LEX@
TYPEAR = ar
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
TAGS = etags

CDFSRC = CDFArray.cc CDFByte.cc CDFFloat64.cc CDFFuCDFtion.cc CDFGrid.cc \
	CDFInt32.cc CDFList.cc CDFSequeCDFe.cc CDFStr.cc CDFStructure.cc CDFUrl.cc

CDFOBJ = CDFArray.o CDFByte.o CDFFloat64.o CDFFuCDFtion.o CDFGrid.o \
	CDFInt32.o 	CDFList.o CDFSequeCDFe.o CDFStr.o CDFStructure.o CDFUrl.o

SSRCS = cdf_das.cc cdfdas.cc cdf_dds.cc cdfdds.cc cdf_dods.cc $(NETSRC)
DASOBJS = cdf_das.o cdfdas.o $(NETOBJ)
DDSOBJS = cdf_dds.o cdfdds.o $(NETOBJ)
SRVOBJS = cdf_dods.o cdfdds.o $(NETOBJ)

NETSRC = NCConnect.cc inst.cc $(NCSRC)
NETOBJ = NCConnect.o inst.o $(NCOBJ)

LIBSRCS = $(NETSRC) Dfile.cc Ddim.cc Dattr.cc Dvar.cc Dcdf.cc Dputget.cc \
           Dputgetg.cc 
LIBOBJS = $(NETOBJ) Dfile.o Ddim.o Dattr.o Dvar.o Dcdf.o Dputget.o Dputgetg.o

NCHDRS = lnetcdf.h
XDRFILE	= @XDRFILE@

NCOBJS = larray.o lattr.o lcdf.o ldim.o lfile.o liarray.o lerror.o \
	 lglobdef.o lputget.o lputgetg.o lsharray.o lstring.o lvar.o \
	 l@XDRFILE@.o

.PHONY:	programs
all: libcdf-dods.a cdf_das cdf_dds cdf_dods programs

cdf_das:	$(DASOBJS) libcdf-dods.a
	$(CXX) $(LDFLAGS) -o cdf_das $(DASOBJS) $(LIBS)	

cdf_dds: $(DDSOBJS) libcdf-dods.a
	$(CXX) $(LDFLAGS) -o cdf_dds $(DDSOBJS)  $(LIBS)

cdf_dods: $(SRVOBJS) libcdf-dods.a
	$(CXX) $(LDFLAGS) -o cdf_dods $(SRVOBJS) $(LIBS)

libcdf-dods.a: $(LIBOBJS) $(CDFOBJS)
	$(AR) -cru $@ $?
	$(RANLIB) $@

programs:
	cd ncdump && $(MAKE) $(MFLAGS) all && cd ..
	cd ncview && $(MAKE) $(MFLAGS) all && cd ..

# Standard targets with some customization for das-test and dds-test

Makefile: ${srcdir}/Makefile.in
	${SHELL} config.status

check:
	echo "No tests"
	cd ncdump && $(MAKE) $(MFLAGS) check && cd ..
	cd ncview && $(MAKE) $(MFLAGS) check && cd ..

install: all
	$(INSTALL_DATA) libnc-dods.a $(libdir)
	$(RANLIB) $(libdir)/libnc-dods.a
	$(INSTALL_PROGRAM) nc_das $(etcdir)
	$(INSTALL_PROGRAM) nc_dds $(etcdir)
	$(INSTALL_PROGRAM) nc_dods $(etcdir)
	$(INSTALL_PROGRAM) nc $(etcdir)
	cd ncdump && $(MAKE) $(MFLAGS) install && cd ..
	cd ncview && $(MAKE) $(MFLAGS) install && cd ..

clean:	
	-rm -f *.o *.sum *.log *~ core
	-rm -f $(PROG) libnc-dods.a
	cd ncdump && $(MAKE) $(MFLAGS) clean && cd ..
	cd ncview && $(MAKE) $(MFLAGS) clean && cd ..

distclean:
	-rm -f *.o *.sum *.log *~ core
	-rm -f $(PROG) libnc-dods.a
	-rm -f config.status config.log config.cache
	-rm -f site.exp
	cd ncdump && $(MAKE) $(MFLAGS) distclean && cd ..
	cd ncview && $(MAKE) $(MFLAGS) distclean && cd ..

depend: 
	@depend@ -- $(INCS) -I/usr/local/lib/g++-include -- $(SSRCS) $(CSRCS)
	cd ncdump && $(MAKE) $(MFLAGS) depend && cd ..
	cd ncview && $(MAKE) $(MFLAGS) depend && cd ..

.SUFFIXES:      .o .cc .c

.c.o:
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

# DO NOT DELETE THIS LINE -- make depend depends on it.

